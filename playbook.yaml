---

- name: Laptop provisioner, it will prepare your computer
  hosts: localhost 
  user: buker
  become: yes
  vars:
    user: "buker"
  tasks:

  - name: Print out the hostname of target
    command: hostname

  - name: Update apt package index
    apt: update_cache=yes


  - name: Ensure aptitude is installed
    apt: name=aptitude

  - name: Upgrade system packages
    apt: upgrade=yes
  - name: Install basic packages
    apt: name={{item}}
    with_items:
     - aptitude
     - htop
     - less
     - links
     - telnet
     - curl
     - apt-transport-https
     - ca-certificates
     - software-properties-common
     - unzip
     - jq
     - ttf-ancient-fonts
     - xclip

  - name: Add spotify key
    apt_key:
      keyserver: keyserver.ubuntu.com
      id: 931FF8E79F0876134EDDBDCCA87FF9DF48BF1C90
  - name: Add spotify repo
    apt_repository:
      repo: "deb http://repository.spotify.com stable non-free"

  - name: Install basic development tool
    apt: name={{item}}
    with_items:
      - tmux
      - zsh
      - git

  - name: Install multimedia
    apt: name={{item}}
    with_items:
      - spotify-client
      - steam
 
  - name: Install bigger dev tools
    apt: name={{item}}
    with_items:
      - docker.io
      - virtualbox
 
### Get dotfiles
  - name: Clone Dotfiles repo
    git: repo=https://github.com/buker/dotfiles dest=/home/{{ user }}/Config
    become_user: "{{ user }}"

### Install oh-my-zsh 
  - name: Clone oh-my-zsh repo
    git: repo=https://github.com/robbyrussell/oh-my-zsh.git dest=/home/{{ user }}/.oh-my-zsh
    become_user: "{{ user }}"
  - name: remove standard zshrc
    file: path=/home/{{ user }}/.zshrc state=absent
    become_user: "{{ user }}"
  - name: symlink zshrc
    file: path=/home/{{ user }}/.zshrc src=/home/{{ user }}/Config/.zshrc state=link owner={{ user }}
    become_user: "{{ user }}"
  - name: Download zsh them
    git: repo=https://github.com/denysdovhan/spaceship-prompt.git dest=~/.oh-my-zsh/themes/spaceship-prompt
    become_user: "{{ user }}"
  - name: Symlink them file
    file: path=~/.oh-my-zsh/themes/spaceship.zsh-theme  src=~/.oh-my-zsh/themes/spaceship-prompt/spaceship.zsh-theme state=link 
    become_user: "{{ user }}"
  - name: Set zsh as default shell
    user: name={{ user }} shell=/bin/zsh

### Install tmux
  - name: Remove standard tmux conf
    file: path=/home/{{ user }}/.tmux.conf state=absent
    become_user: "{{ user }}"
  - name: Symlink tmux config
    file: path=/home/{{ user }}/.tmux.conf src=/home/{{ user }}/Config/.tmux.conf state=link 
    become_user: "{{ user }}"
  - name: Clone tpm
    git: repo=https://github.com/tmux-plugins/tpm dest=/home/{{ user }}/.tmux/plugins/tpm
    become_user: "{{ user }}"
  - name: Make magleva works
    file: path=/home/{{ user }}/.tmux/thems state=directory
    become_user: "{{ user }}"
  - name: Link maglev them
    file: path=/home/{{ user }}/.tmux/thems/maglev src=/home/{{ user }}/.tmux/plugins/maglev state=link
    become_user: "{{ user }}"
### Install vim configuration and plugins

###Install kubectl
#  - name: Check last version of kubectl
#    command: curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt
#    register: kubectl_version
#
#  - name: Download last kubectl version
#    get_url:
#      url: https://storage.googleapis.com/kubernetes-release/release/{{kubectl_version.stdout}}/bin/linux/amd64/kubectl
#      dest: /usr/local/bin/kubectl
#      mode: 755
#
###Install Terraform
#  - name: Check last terraform version
#    shell: curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r -M '.current_version'
#    register: terraform_version
#
#  - name: Download last terraform version
#    unarchive:
#      src: "https://releases.hashicorp.com/terraform/{{ terraform_version.stdout }}/terraform_{{ terraform_version.stdout }}_linux_amd64.zip"
#      dest: /usr/local/bin/
#      remote_src: yes
#
